pipeline{
    
    agent any
    
    
    tools{
        maven "Maven 3.8.6"
    }
    
    options {
        buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
    }

    
    stages{
            stage('checkoutCode'){
                steps{
                    buildUpdates('STARTED')
                    git branch: 'qa', credentialsId: 'ff6842f8-c896-4efa-8653-997635805033', url: 'https://github.com/shashavalidudekula/maven-web-application.git'
                }
            }
        
            stage('Build'){
                steps{
                    sh "mvn clean package"
                }
            }
            
            stage('SonarQubeReport'){
                steps{
                    sh "mvn sonar:sonar"
                }
            } 
            
           /* stage('UploadArtifactToNexus'){
                steps{
                    sh "mvn deploy"
                }
            }
*/            
            stage('DeployTotomcat'){
                steps{
                    deploy adapters: [tomcat9(credentialsId: '53f27d79-3a3c-4536-a262-61c419a0e0df', path: '', url: 'http://172.31.38.222:8080/')], contextPath: '/maven-web-application', onFailure: false, war: '**/maven-web-application.war'
                }
            }
    } //Stages closed
    
    // Slack Notifiacation configuration
    post {
        success {
            buildUpdates(currentBuild.result)       // Calling buildUpdates function
        }
        failure {
            buildUpdates(currentBuild.result)
        }
    }
    
}//Pipeline closes



// buildUpdates function definition

def buildUpdates(String buildStatus = 'STARTED' ){
 
 buildStatus = buildStatus ?: 'SUCCESS'
 
 //default values
 def colorName = 'GREEN'
 def colorCode = '00FF00'
 def subject = "[${env.BUILD_NUMBER}] ${env.JOB_NAME} is ${buildStatus}"
 def summary = "${subject} (${env.BUILD_URL})"
 
 if (buildStatus == 'STARTED') {
     colorName = 'YELLOW'
     colorCode = 'FFFF00'
 } else if (buildStatus == 'SUCCESS') {
     colorName = 'GREEN'
     colorCode = '00FF00'
 } else {
     colorName = 'RED'
     colorCode = 'FF0000'
 }
 
 //send notifications
 slackSend (color: colorCode, message: summary)
    
}
